{"version":3,"sources":["../utils/mod.js","../../node_modules/nanoid/index.browser.js","../utils/uniqueId.js","../utils/index.js","Dropdown/Select.jsx","Dropdown/Option.jsx","Dropdown/index.js","index.js"],"names":["mod","n","m","urlAlphabet","random","bytes","crypto","getRandomValues","Uint8Array","customRandom","alphabet","size","getRandom","mask","Math","log","length","LN2","step","id","j","customAlphabet","nanoid","byte","toString","toUpperCase","uniqueId","prefix","Select","Button","children","color","textWrap","props","style","button","wrap","nowrap","Label","label","ListBox","open","focusedIndex","activeIndex","onChange","refs","React","Children","map","useRef","useEffect","current","focus","listbox","hidden","child","i","ref","handleChange","value","placeholder","getActiveIndex","findIndex","c","useState","setActiveIndex","max","setFocusedIndex","setOpen","unset","handleCloseList","v","wrapper","e","next","prev","key","shiftKey","currentTarget","contains","relatedTarget","Option","option"],"mappings":"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","file":"index.js","sourceRoot":"../src/components","sourcesContent":["/**\n * Modulo operation. Operates differently to the remainder (%) JS\n * operator when n is negative.\n * @param {number} n Quotient.\n * @param {number} m Dividend.\n *\n * @example\n * -1 % 4 = -1\n * mod(-1, 4) = 3\n */\nconst mod = (n, m) => ((n % m) + m) % m;\n\nexport default mod;\n","// This file replaces `index.js` in bundlers like webpack or Rollup,\n// according to `browser` config in `package.json`.\n\nif (process.env.NODE_ENV !== 'production') {\n  // All bundlers will remove this block in the production bundle.\n  if (\n    typeof navigator !== 'undefined' &&\n    navigator.product === 'ReactNative' &&\n    !self.crypto\n  ) {\n    throw new Error(\n      'React Native does not have a built-in secure random generator. ' +\n      'If you don’t need unpredictable IDs, you can use `nanoid/non-secure`. ' +\n      'For secure IDs, import `react-native-get-random-values` before Nano ID.'\n    )\n  }\n  if (typeof self !== 'undefined' && self.msCrypto && !self.crypto) {\n    throw new Error(\n      'Add self.crypto = self.msCrypto before Nano ID to fix IE 11 support'\n    )\n  }\n  if (typeof self === 'undefined' || !self.crypto) {\n    throw new Error(\n      'Your browser does not have secure random generator. ' +\n      'If you don’t need unpredictable IDs, you can use nanoid/non-secure.'\n    )\n  }\n}\n\n// This alphabet uses `A-Za-z0-9_-` symbols. The genetic algorithm helped\n// optimize the gzip compression for this alphabet.\nlet urlAlphabet =\n  'ModuleSymbhasOwnPr-0123456789ABCDEFGHNRVfgctiUvz_KqYTJkLxpZXIjQW'\n\nlet random = bytes => crypto.getRandomValues(new Uint8Array(bytes))\n\nlet customRandom = (alphabet, size, getRandom) => {\n  // First, a bitmask is necessary to generate the ID. The bitmask makes bytes\n  // values closer to the alphabet size. The bitmask calculates the closest\n  // `2^31 - 1` number, which exceeds the alphabet size.\n  // For example, the bitmask for the alphabet size 30 is 31 (00011111).\n  // `Math.clz32` is not used, because it is not available in browsers.\n  let mask = (2 << Math.log(alphabet.length - 1) / Math.LN2) - 1\n  // Though, the bitmask solution is not perfect since the bytes exceeding\n  // the alphabet size are refused. Therefore, to reliably generate the ID,\n  // the random bytes redundancy has to be satisfied.\n\n  // Note: every hardware random generator call is performance expensive,\n  // because the system call for entropy collection takes a lot of time.\n  // So, to avoid additional system calls, extra bytes are requested in advance.\n\n  // Next, a step determines how many random bytes to generate.\n  // The number of random bytes gets decided upon the ID size, mask,\n  // alphabet size, and magic number 1.6 (using 1.6 peaks at performance\n  // according to benchmarks).\n\n  // `-~f => Math.ceil(f)` if f is a float\n  // `-~i => i + 1` if i is an integer\n  let step = -~(1.6 * mask * size / alphabet.length)\n\n  return () => {\n    let id = ''\n    while (true) {\n      let bytes = getRandom(step)\n      // A compact alternative for `for (var i = 0; i < step; i++)`.\n      let j = step\n      while (j--) {\n        // Adding `|| ''` refuses a random byte that exceeds the alphabet size.\n        id += alphabet[bytes[j] & mask] || ''\n        // `id.length + 1 === size` is a more compact option.\n        if (id.length === +size) return id\n      }\n    }\n  }\n}\n\nlet customAlphabet = (alphabet, size) => customRandom(alphabet, size, random)\n\nlet nanoid = (size = 21) => {\n  let id = ''\n  let bytes = crypto.getRandomValues(new Uint8Array(size))\n\n  // A compact alternative for `for (var i = 0; i < step; i++)`.\n  while (size--) {\n    // It is incorrect to use bytes exceeding the alphabet size.\n    // The following mask reduces the random byte in the 0-255 value\n    // range to the 0-63 value range. Therefore, adding hacks, such\n    // as empty string fallback or magic numbers, is unneccessary because\n    // the bitmask trims bytes down to the alphabet size.\n    let byte = bytes[size] & 63\n    if (byte < 36) {\n      // `0-9a-z`\n      id += byte.toString(36)\n    } else if (byte < 62) {\n      // `A-Z`\n      id += (byte - 26).toString(36).toUpperCase()\n    } else if (byte < 63) {\n      id += '_'\n    } else {\n      id += '-'\n    }\n  }\n  return id\n}\n\nexport { nanoid, customAlphabet, customRandom, urlAlphabet, random }\n","import { nanoid } from \"nanoid\";\n\n/**\n * Generates a random unique id.\n * @param {string} prefix String to prefix id with.\n */\nconst uniqueId = (prefix) => `${prefix}${nanoid(5)}`;\n\nexport default uniqueId;\n","import mod from \"./mod\";\nimport uniqueId from \"./uniqueId\";\n\nexport { mod, uniqueId };\n","import React from \"react\";\n\nimport { uniqueId, mod } from \"../../utils\";\n\nimport style from \"./style.css\";\n\n/**\n *\n * @param {string} color Color of circle adornment.\n * @param {bool} textWrap Whether button can expand vertically to allow text wrapping. Defaults to false.\n */\nconst Button = ({ children, color, textWrap = false, ...props }) => {\n  return (\n    <button\n      aria-haspopup=\"listbox\"\n      title={children}\n      className={`${style.button} ${style[color]} ${\n        textWrap ? style.wrap : style.nowrap\n      }`}\n      {...props}\n    >\n      {children}\n    </button>\n  );\n};\n\nconst Label = ({ children, ...props }) => {\n  return (\n    <span className={style.label} {...props}>\n      {children}\n    </span>\n  );\n};\n\n/**\n *\n * @param {bool} open Whether listbox should be displayed or not\n * @param {number} activeIndex Current active element index.\n * @param {number} focusedIndex Current focused element index.\n * @param {function} onChange Function to be fired when active element changes.\n */\nconst ListBox = ({\n  children,\n  open,\n  activeIndex,\n  focusedIndex,\n  onChange,\n  ...props\n}) => {\n  const refs = React.Children.map(children, () => React.useRef());\n\n  // Focus element when focusedIndex changes or listbox opens.\n  React.useEffect(() => {\n    refs[focusedIndex].current.focus();\n  }, [focusedIndex, open]);\n\n  return (\n    <ul\n      tabIndex=\"-1\"\n      role=\"listbox\"\n      className={`${style.listbox} ${open ? \"\" : style.hidden}`}\n      {...props}\n    >\n      {/* Amends id, ref and handleChange to each child */}\n      {React.Children.map(children, (child, i) => ({\n        ...child,\n        props: {\n          ...child.props,\n          id: `${props.id}-option-${i}`, // Use parent id\n          ref: refs[i],\n          handleChange: onChange,\n        },\n      }))}\n    </ul>\n  );\n};\n\n/**\n *\n * @param {string} label Label that appears above select. Optional.\n * @param {string} value Current selected value.\n * @param {string} placeholder Placeholder for when value is falsy.\n * @param {function} onChange Function that is fired when selected option is changed.\n */\nconst Select = ({\n  children,\n  label,\n  value,\n  placeholder = \"Select...\",\n  onChange,\n}) => {\n  // Return index of first element that has value equal to provided value\n  const getActiveIndex = () => {\n    return children.findIndex((c) => c.props.value === value);\n  };\n\n  const [activeIndex, setActiveIndex] = React.useState(getActiveIndex());\n  const [focusedIndex, setFocusedIndex] = React.useState(\n    Math.max(activeIndex, 0) // Focus should be on first element if active is unset\n  );\n  const [id] = React.useState(() => uniqueId(\"select-\"));\n  const [open, setOpen] = React.useState(false);\n\n  // True if no active index\n  const unset = activeIndex === -1;\n\n  // Change activeIndex when value changes\n  React.useEffect(() => {\n    setActiveIndex(getActiveIndex());\n  }, [value]);\n\n  // Close listbox\n  const handleCloseList = () => {\n    setOpen(false);\n  };\n\n  // Toggle listbox visibility\n  const handleToggleList = () => {\n    setOpen(!open);\n  };\n\n  // Fire onChange() and close listbox\n  const handleChange = (v) => {\n    onChange(v);\n    handleCloseList();\n  };\n\n  // Close list if current focus is outside list\n  const handleBlur = (e) => {\n    if (!e.currentTarget.contains(e.relatedTarget)) {\n      setOpen(false);\n    }\n  };\n\n  // Keyboard controls\n  const handleKeyDown = (e) => {\n    const next = () => setFocusedIndex(mod(focusedIndex + 1, children.length));\n    const prev = () => setFocusedIndex(mod(focusedIndex - 1, children.length));\n    const first = () => setFocusedIndex(0);\n    const last = () => setFocusedIndex(children.length - 1);\n\n    // According to WAI-ARIA practices:\n    // https://www.w3.org/TR/wai-aria-practices/#listbox_kbd_interaction\n    switch (e.key) {\n      case \"ArrowDown\":\n        next();\n        break;\n      case \"ArrowUp\":\n        prev();\n        break;\n      case \"Home\":\n        first();\n        break;\n      case \"End\":\n        last();\n        break;\n      case \" \":\n      case \"Enter\":\n        if (open) handleChange(children[focusedIndex].props.value);\n        break;\n      case \"Tab\":\n        if (e.shiftKey) prev();\n        else next();\n        break;\n      default:\n        break;\n    }\n  };\n\n  return (\n    <div\n      className={style.wrapper}\n      onKeyDown={handleKeyDown}\n      onBlur={handleBlur}\n    >\n      {label && <Label id={`${id}-label`}>{label}</Label>}\n      <Button\n        id={`${id}-btn`}\n        aria-labelledby={`${id}-label ${id}-btn`}\n        color={unset ? \"gray\" : children[activeIndex].props.color}\n        onClick={handleToggleList}\n      >\n        {unset ? placeholder : children[activeIndex].props.children}\n      </Button>\n      <ListBox\n        id={`${id}-list`}\n        aria-labelledby={`${id}-label`}\n        aria-expanded={open}\n        aria-activedescendant={`${id}-list-option-${activeIndex}`}\n        open={open}\n        activeIndex={activeIndex}\n        focusedIndex={focusedIndex}\n        onChange={handleChange}\n      >\n        {children}\n      </ListBox>\n    </div>\n  );\n};\n\nexport default Select;\n","import React from \"react\";\n\nimport style from \"./style.css\";\n\n/**\n *\n * @param {string} value Value of option.\n * @param {string} color Color of circle adornment.\n * @param {bool} textWrap Whether text can wrap. Defaults to false.\n * @param {function} handleChange Function to be fired when clicked.\n */\nconst Option = ({\n  children,\n  value,\n  color,\n  textWrap = false,\n  handleChange,\n  ...props\n}) => {\n  // Fire handleChange() with this components value on click\n  const handleClick = () => {\n    handleChange(value);\n  };\n\n  return (\n    <li\n      role=\"option\"\n      tabIndex=\"0\"\n      title={children}\n      onClick={handleClick}\n      className={`${style.option} ${style[color]} ${\n        textWrap ? style.wrap : style.nowrap\n      }`}\n      {...props}\n    >\n      {children}\n    </li>\n  );\n};\n\nexport default Option;\n","import Select from \"./Select\";\nimport Option from \"./Option\";\n\nexport default { Select, Option };\n","import Dropdown from \"./Dropdown\";\n\nexport { Dropdown };\n"]}